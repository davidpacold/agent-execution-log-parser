name: Build, Test and Deploy

on:
  push:
    branches:
      - main
      - 'feature/**'
      - 'fix/**'
  pull_request:
    branches:
      - main
  workflow_dispatch:

# Default permissions
permissions:
  contents: read
  pull-requests: write

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    name: Build and Test
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm install
        
      - name: Run tests
        run: npm test
        
      - name: Verify build
        run: npm run deploy -- --dry-run
        
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: coverage/
          retention-days: 7
        if: always() # Upload even if tests fail

  deploy_production:
    needs: build_and_test
    if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    runs-on: ubuntu-latest
    name: Deploy to Production
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Deploy to Cloudflare Workers (Production)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          # For production, deploy to the production environment
          command: deploy --env production
          
      - name: Notify production deployment status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Production deployment successful!"
          else
            echo "❌ Production deployment failed!"
          fi

  deploy_preview:
    needs: build_and_test
    # Run on branch pushes or PRs from forks
    # This prevents duplicate deployments when creating a PR from a branch in the same repo
    if: (github.event_name == 'push' && github.ref != 'refs/heads/main' && 
         (startsWith(github.ref, 'refs/heads/feature/') || startsWith(github.ref, 'refs/heads/fix/')) &&
         !contains(github.event.head_commit.message, 'Merge pull request'))
    runs-on: ubuntu-latest
    name: Deploy Preview
    permissions:
      pull-requests: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Extract branch name
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}} | sed 's/\//-/g')" >> $GITHUB_ENV
        
      - name: Deploy to Cloudflare Workers (Preview)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          # Deploy to the preview environment
          command: deploy --env preview
          
          
      - name: Notify preview deployment status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Preview deployment successful!"
            PREVIEW_URL="https://agent-execution-log-parser-preview.david-pacold.workers.dev"
            echo "Preview URL: $PREVIEW_URL"
            echo "PREVIEW_URL=$PREVIEW_URL" >> $GITHUB_ENV
          else
            echo "❌ Preview deployment failed!"
          fi
          
  comment_pr:
    needs: build_and_test
    # Only run on PRs from branches in the same repo (not forks)
    if: github.event_name == 'pull_request' && !github.event.pull_request.head.repo.fork
    runs-on: ubuntu-latest
    name: Comment PR with Preview URL
    permissions:
      pull-requests: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      
      - name: Comment PR with preview URL
        uses: actions/github-script@v6
        with:
          github-token: ${{ github.token }}
          script: |
            const previewUrl = "https://agent-execution-log-parser-preview.david-pacold.workers.dev";
            const timestamp = new Date().toISOString();
            const sha = process.env.GITHUB_SHA.substring(0, 7);
            
            const body = [
              `✅ Preview deployment is available at: [${previewUrl}](${previewUrl})`,
              "",
              "### Changes Overview",
              "- **Environment:** Preview",
              `- **Deployment Time:** ${timestamp}`,
              `- **Version:** ${sha}`
            ].join("\n");
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });